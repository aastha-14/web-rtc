{"version":3,"sources":["SocketContext.js","components/VideoPlayer.jsx","components/Notifications.jsx","components/Options.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","catch","error","console","log","on","id","from","callerName","signal","isReceivedCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoPlay","Notifications","style","display","Button","color","onClick","root","marginTop","Options","idToCall","setIdToCall","Container","elevation","form","noValidate","autoComplete","TextField","label","onChange","e","target","fullwidth","text","fullWidth","startIcon","Assignment","fontSize","PhoneDisabled","Phone","appBar","borderRadius","alignItems","image","marginLeft","wrapper","App","AppBar","position","align","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2241c5ee.chunk.js","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io('https://videochatserver-nodejs.herokuapp.com/');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n    const [stream, setStream] = useState(null);\r\n    const [me, setMe] = useState('');\r\n    const [call, setCall] = useState({});\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n            .then((currentStream) => {\r\n                setStream(currentStream);\r\n                myVideo.current.srcObject = currentStream;\r\n            })\r\n            .catch((error) => { console.log(error); });\r\n\r\n        socket.on('me', (id) => setMe(id));\r\n\r\n        socket.on('callUser', ({ from, name: callerName, signal }) => {\r\n            setCall({ isReceivedCall: true, from, name: callerName, signal });\r\n        });\r\n\r\n    }, []);\r\n    const answerCall = () => {\r\n        setCallAccepted(true);\r\n        const peer = new Peer({ initiator: false, trickle: false, stream });\r\n        peer.on('signal', (data) => {\r\n            socket.emit('answerCall', { signal: data, to: call.from });\r\n        });\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n        peer.signal(call.signal);\r\n\r\n        connectionRef.current = peer;\r\n    };\r\n\r\n    const callUser = (id) => {\r\n        const peer = new Peer({ initiator: true, trickle: false, stream });\r\n        peer.on('signal', (data) => {\r\n            socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\r\n        });\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        socket.on('callAccepted', (signal) => {\r\n            setCallAccepted(true);\r\n            peer.signal(signal);\r\n        });\r\n\r\n        connectionRef.current = peer;\r\n    };\r\n\r\n    const leaveCall = () => {\r\n        setCallEnded(true);\r\n        connectionRef.current.destroy();\r\n        window.location.reload();\r\n    };\r\n\r\n    return (\r\n        <SocketContext.Provider value={{\r\n            call, callAccepted, myVideo, userVideo, stream, name, setName, callEnded, me, callUser, leaveCall, answerCall\r\n        }}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n};\r\n\r\nexport { ContextProvider, SocketContext };","import React, { useContext } from \"react\";\r\nimport { Grid, Typography, Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { SocketContext } from \"../SocketContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  video: {\r\n    width: \"550px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"300px\",\r\n    },\r\n  },\r\n  gridContainer: {\r\n    justifyContent: \"center\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  paper: {\r\n    padding: \"10px\",\r\n    border: \"2px solid black\",\r\n    margin: \"10px\",\r\n  },\r\n}));\r\n\r\nconst VideoPlayer = () => {\r\n  const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } =\r\n    useContext(SocketContext);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.gridContainer}>\r\n      {/* Our own video */}\r\n      {stream && (\r\n        <Paper className={classes.paper}>\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              {name || \"Name\"}\r\n            </Typography>\r\n            <video\r\n              playsInline\r\n              muted\r\n              ref={myVideo}\r\n              autoPlay={true}\r\n              className={classes.video}\r\n            />\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n      {/* User's video */}\r\n      {callAccepted && !callEnded && (\r\n        <Paper className={classes.paper}>\r\n          <Grid item xs={12} md={6}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              {call.name || \"Name\"}\r\n            </Typography>\r\n            <video\r\n              playsInline\r\n              ref={userVideo}\r\n              autoPlay={true}\r\n              className={classes.video}\r\n            />\r\n          </Grid>\r\n        </Paper>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n","import React, { useContext } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { SocketContext } from \"../SocketContext\";\r\n\r\nconst Notifications = () => {\r\n  const { answerCall, call, callAccepted } = useContext(SocketContext);\r\n\r\n  return (\r\n    <>\r\n      {call.isReceivedCall && !callAccepted && (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <h1>{call.name} is calling:</h1>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n            Answer\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Container,\r\n  Typography,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { Assignment, Phone, PhoneDisabled } from \"@material-ui/icons\";\r\n\r\nimport { SocketContext } from \"../SocketContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  gridContainer: {\r\n    width: \"100%\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  container: {\r\n    width: \"600px\",\r\n    margin: \"35px 0\",\r\n    padding: 0,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  margin: {\r\n    marginTop: 20,\r\n  },\r\n  padding: {\r\n    padding: 20,\r\n  },\r\n  paper: {\r\n    padding: \"10px 20px\",\r\n    border: \"2px solid black\",\r\n  },\r\n}));\r\n\r\nconst Options = ({ children }) => {\r\n  const { me, callAccepted, callEnded, name, setName, leaveCall, callUser } =\r\n    useContext(SocketContext);\r\n\r\n  const [idToCall, setIdToCall] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Paper elevation={10} className={classes.paper}>\r\n        <form className={classes.form} noValidate autoComplete=\"off\">\r\n          <Grid container className={classes.gridContainer}>\r\n            <Grid item xs={12} md={6} className={classes.padding}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Account Info\r\n              </Typography>\r\n              <TextField\r\n                label=\"Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                fullwidth\r\n              />\r\n              <CopyToClipboard text={me} className={classes.margin}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  startIcon={<Assignment fontSize=\"large\" />}\r\n                >\r\n                  Copy your ID\r\n                </Button>\r\n              </CopyToClipboard>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} className={classes.padding}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Make a call\r\n              </Typography>\r\n              <TextField\r\n                label=\"ID to call\"\r\n                value={idToCall}\r\n                onChange={(e) => setIdToCall(e.target.value)}\r\n                fullwidth\r\n              />\r\n              {callAccepted && !callEnded ? (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  fullWidth\r\n                  startIcon={<PhoneDisabled fontSize=\"large\" />}\r\n                  onClick={leaveCall}\r\n                  className={classes.margin}\r\n                >\r\n                  Hang Up\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  startIcon={<Phone fontSize=\"large\" />}\r\n                  onClick={() => callUser(idToCall)}\r\n                  className={classes.margin}\r\n                >\r\n                  Call{\" \"}\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {children}\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import React from 'react';\r\nimport { Typography, AppBar } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport VideoPlayer from './components/VideoPlayer';\r\nimport Notifications from './components/Notifications';\r\nimport Options from './components/Options';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        borderRadius: 15,\r\n        margin: '30px 100px',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '600px',\r\n        border: '2px solid black',\r\n\r\n        [theme?.breakpoints?.down('xs')]: {\r\n            width: '90%',\r\n        },\r\n    },\r\n    image: {\r\n        marginLeft: '15px',\r\n    },\r\n    wrapper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n    },\r\n}));\r\nconst App = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n                <Typography variant=\"h2\" align=\"center\">\r\n                    Video Chat APP\r\n                </Typography>\r\n            </AppBar>\r\n            <VideoPlayer />\r\n            <Options>\r\n                <Notifications />\r\n            </Options>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport { ContextProvider } from './SocketContext';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n    <ContextProvider>\r\n        <App />\r\n    </ContextProvider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}